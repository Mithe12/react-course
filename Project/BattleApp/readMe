/* First Component */
1. we are going to scaffold the project using babel and webpack. We are not using create-react-app project.
2. Run "npm init -y" to initialize the project. This will create package.json with meta information.
3. Run "npm install react react-dom". This will download the packages and place it in node_modules.
4. Creating ".gitignore" file and add node_modules and dist to it.
5. Create an "app" folder and place three file "index.js", "index.html", "index.css"
6. Imported "React" and "React-dom/client" package and created class component and added the component to rootElement.
    // Class component will have state, lifecycle and will render UI.
7. install : npm install --save-dev @babel/core @babel/preset-env @babel/preset-react webpack webpack-cli webpack-dev-server babel-loader css-loader style-loader html-webpack-plugin
8. create a webpack.config.js files
9. we need to configure babel presets in package.json to know what kind of transformation we want to make on our code.
        "@babel/preset-env" ==  Transformation of Modern JS to Browser JS
        "@babel/preset-react" == Transformation of JSX to JS
10. Update the scripts property in package.json and add build webpack to it
11. WE need to take index.html, copy it and place it in dist folder with reference of index_bundle.js as <script> tag.
    // we need to use HtmlWebpackplugin and mention where index.html is located.
12. Support hot-reloading, webpack-dev-server
    